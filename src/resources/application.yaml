environment: ${ENVIRONMENT:local}

server:
  address: ${SERVER_ADDRESS:0.0.0.0}
  path_prefix: /api/v1
  api:
    port: ${SERVER_API_PORT:8080}
    cors:
      allowed_origin: ${SERVER_CORS_ALLOWED_ORIGIN:"*"}
  worker:
    port: ${SERVER_WORKER_PORT:8081}

postgres:
  master_url: ${POSTGRES_MASTER_URL:localhost:5432}
  replica_urls: ${POSTGRES_REPLICA_URLS:localhost:5432} # Split the hosts by comma
  db_name: ${POSTGRES_DB_NAME:local}
  username: ${POSTGRES_USERNAME:local}
  password: ${POSTGRES_PASSWORD:local}
  max_connections: ${POSTGRES_MAX_CONNECTIONS:10}

jwt:
  private_key_base64: ${JWT_PRIVATE_KEY_BASE64:LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBcWIvakIxbkRRbExRK0oya3pIQ1h5cy9JQmdHemllQm1JZXJMZTNjZkYyL0FocUttCjFscDBRL0R1bGR2YjdaSzJ3MFpScURTZU5WZDdidUFDYkU5eGdRVmk0eitrTk9qdUVudE9LdXk3ZEhQMlFBUDIKNDh0QXVVRTlMdlRrUzd4WUtqcFpsVXJHU0NTUjA5VnExR2lGRDBPUGVLcytNcG40QlFrcjFQRnhSSU03TloyWgpBdTFmTmZmbkI3YkRlb3JLbVRlRjBxMGpkZTV4SEQ5UzRFSXI2dVNkUDhpQjdJTHdVRG4vOVhCbGRBS2pRMnVMCmE0OWp1UEFrUjdFVFZHREZtQXBadU1QVFhGK0VCb3NPYUQyajhxc2dXWDRVaDVNQll0VHVUa080QUUrd3B5c0kKQkxmVk5jTHdJeW9HZUFBand0ZTZCODdpZHdKZTczQkQxUHc3eGF2L3NHWDhwaUxGLzNlTHgwYW9TZGp0c203dgpDVkNCL2tWNXJSNnZFcjZEQy9idDBEY2o4SFlJdlZmbXJCZkVFcmpxWDl2SjBlcVUxTlQrK2RicXllSnROQ2doCktmMkQ2ZXdDcW1aWWZmOXVwVk45TXNQVHlrRktaWitpdVp3ZGJUa1dRR1l6L01pUVZjYkRRbkJSZVg5OXBNMGYKdHo5bUZ2NzJoR3R6dnl5WDJDakRIY0UwR3BxMElPQjJqOVFMdlJDeHhrRXU3V2EwbnpMNXBLN3hOVGh4ek9LQgpHNys3WXhlVG5YRm9hS056Z3htRjB0QWppYmZ2dDFNU21yRWNockMyRTBtU1JvTlU0R0NYWm4vTytHYzFYQi9kCmUzUkpPUlluNThRcXBzMGlsQ1JRbXhKRzdtcXB3Z2k2NEwvRklyNjUwM1lYNk9GUVk4T0grOXdQdUljQ0F3RUEKQVFLQ0FnQmloSytxMEhuMndFSHdTTzRnaVNoUDJRL3FESXE2OXJYUDhZbHZlczljdHNzeVdLd2p0QlBPYXNMTgp6dkJ4amJqczFKOEgxS0lOcTF4RUdWYk9yYnplZU5YUHRsd0RLVDBqRk5WbExFZ1BhazM5RVUvMUhUM1BSd0hQCmd1b00ycDhBd3lUQzlNYm5qL0hpMC9aUW1PakExeUVwazVsaG5PTEphVzA3QlhZTG9XNTN5NlBHZ3lYREdNSEoKUkZWbmhhM1lCdFZ3VkhSRU9jTUQ5ZXlQbzFnQjEvVTcwNDgwU1RwWUZaRnNUWE5VUlVPa0dZS3RSbWRHS25tago4aTJaeHlCbkFYclpOUzR5YW0waHJ3c0pqTnplTmx0c0ZUU3RDckMvUDMyZmhzWC95RUJxaFJyK1FnTklWSDh5CnFXMWZzQlVSUEVzSHhSYkNvMm1kNWJZNG9ydTlKL2dDSVBOOWpmdEZnb2R2eFJKTzIxR21FZGJOMVBWbW9udmsKUndDNzg2dGV6Z1NNU2Z3alZNTndxaGg5NmkxM2wybHp4d1FJVWZUN2Rjb1h6bUNtenY0T2ZXUnZpQWVDSjBEZgpMT1hLaXVBU09zNXRWNDhIRVJmeDFBWWs3eHltd0dleGJIWnVRa0o0WnA5dGYyaE54NzNGVC9ZK3N4em1xQjdBCk13ZUVTOWFRUkp0cGthNVQ2d3J6WmRxdjFya0RnRm9mKzhXWjgycjZtYW1Pb2dQMmREbVZZbTBOK3J2VlNKTXYKVzVTQ01jQS9kZEp5V0pRVGhyNEFGK0sySlZQaElLYTA2Sk9nVEc5KzR3R3FlWkdjM2lzZlpZbU5LTXZMVGRqWAp3MXRTb1BKanFJL0FvYWJWdFhZNk1LcVdwK1ZMS0VIYlFqWjZvTkVvVTV5eDlPZ29nUUtDQVFFQTAvcWh2M0R5ClFaNU80RHlWNnJrd2pWOU5COVYzU2dXS3lBR3FvemxzRlZpcjM4L0R4emY3ZGU2b29iNkJxUnpyUWk2LzFhMXYKbkV0WGtLZDljMWxNQnhBSnRnNGx2QzEvVktsTGtnZ3pNb1pqZ1hud2dOVjBkLytsdXFleStqOGdvN0dRYmxxdwpzOXBQN0Q1UXVzaTdrT2Q1UlBmOWt3dkJMY2tJVmR4OEtRUmEvU1BKVFhINTZrVWk2ZDBnVTBJMG1YcW43eGt3CjNrMzBDeHpka1JuTGd2S0N1cTBGZHVyU1hFVnlrMzJSb0o0TkNESmpjdVpoQSt1YWsxak5jb3dzNTNuc2c3VkkKVTN0WmhGUTl5UXJFNlRTT25FUUxDb2xtV2FDSkp1U0hxZ3ZTVFl4dCs1Tmd2ek1jcTJlTkZkQjFmSUtacXZQNwpVLytKM3JsKy9hU2Fkd0tDQVFFQXpRQTVYbjN0d0dtWkUzNVlMVkY0eHFxZ3R3MUwxM1YwUllqNmt4MzVPam1mCmx2SmRwTFp0Y1Zmd0Q0QzJNVTFibXdROUl2L1RDb3I3RGQ1TXd0Q1dwNEd3Vk96Vno5ZHBSOFpPam4rdHJoQnEKeHF5WXF1SHFOS204dDhkcEJmUUROdUdReXFYaWtjajhJSi8vOVdoWTBDcjhyUmhPM1hZR29nNFFrc2VKaHRQdwpiYkRYWkl4VHVVeG9idytIeHZDYjBEVkNNZGxKQi9vOW16aTJ4eUsxME5sK2R2WmJHUiszTEYrL2RQb1Ewdk5JClVFR2pkdTdYdEFoZnNOOTZpa2dNaXk1aVJtbGJqVEJ2WlFXTlJiR3BtWkk1WXJISkJpaXU1SFB5dGM1T1ZFdVMKNU81aHJ6NkhRcWcySVgvM3cwb2lGcytVY0dBRENsZW5tVHJrUE8xR2NRS0NBUUVBZ3poZUVqMGZxZUVPb0o3QQppdm15aFlFZUZTQmVaTE1Ea3dYOUZHZUNjY0JmUFAvSENMYXQ4ZllYNjNBYm9ZMG1VT1RSbWJ0d0lNYys0R3ZlCks1NTJndFM1dmpvSnYvQkdKeWxaZjMrVitjdlpJeGhSK2Q2bzUzT1lxdkFPeWZ4ei93RDNFR2tSZzNROEQxa1AKN21BK1E5Z1dhTXcrNjF6V2E3cExiNk02Tk1YZWNWOUt5S2NxZG92dnJlZFZrRlNtYk8vUnJ4L2Y4VzArQ2ZjSApiVUFUaSs4RlgvdWxLMVQzZldqOElUTVZCK0Z1M2NrYmFOQVY5REJQa3JEaEZPeVRDNE9kRm5jTTI2aTY1RUNsCnNxTDQvQWV0MUN3R3piSDZhcmNHejgyZDhYUzU3WWxsdDlzbWc1Vm5STytvRlgzaWpIM29GRHhPTTFRM2kyazIKcEZyVnh3S0NBUUEwZENjNXYxMFRTN0hJWkI2cDBkdm1jWWhYN2tZR3BsNE80TUxFMi9tR1pYSXBUSENia2JZbApOMHdNbTNHQzRmbGJpOVVjM0hxaWl2YzhFREp4OHE5cHd1eGNmcEVpOGtwVS9DL2psRlhiWVFZQk9lNkNZdlhyCmJiY0ZDemdiTnRtUHRGMjVESU1Sckd5ZTZIRzAySE5KS0lhb3Y3eUdQQW5zYzA3WVQ4Z253SmtYYUJWaysrYjgKVmNtdkNUbER0Uk1aVGxkV3EvTmM0REhkUXNDNTZXNitOcmgrTmdFUFI2YzE2blh4dDM2UWk0Rm9UN05FM2s1QgpHWmRxaVhRd1o4a1YzOU56a3NmRE02NTlHZE9SRHFtSHl2dDEvbW1pY3N4MVZobTNYVWQ3bUM3STl4bjFuams3CjNCQ2x0N21zdFk1TmFlWGdieUM0QjcreG5Ia0VBZTV4QW9JQkFHbE9TVHpGZk5RdUdFQjZlR0tiSDRvajZ2aVUKVHk3bnBhalJ5Sm1BdU9vQ1E2STJmUkhJRDE5SEoySHVKRUNacVlvb1FiS3R6QWUrUzZ6cXJURlRsSnpweHhCbwpLMmpEbDdXNkV3L0paV2lCbXR6WlJFbDR2VUlPYmNoZWY0M1NFeTZFZXpPSGVCOUJYSFBLYkkrbWFOQzNzUVhKCkZmdUVrNld0K0ZZZndmZlNRdXk2MkIwMmlRcjhHVzM0UEpyYjgrYTRvVVRvekhyRWQ4cEhURmtvaXNmczJBUG8KanMzSE55WmZBWHhhWmFGY0J1MkxTalRuaHloblMrY1lvdFZiUDA1MjRLcVJUbzBBSmV3L2kwMUVTWkExVmxXcwo0dzh3NVpVYTVhZEhGa2tSWkoxNWFZSEtPa2p1ODE2ZUt2QTNaOWlMa1RsK0ZwYVpVMEFLRE1kSy9Ebz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K}
  public_key_base64: ${JWT_PUBLIC_KEY_BASE64:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUFxYi9qQjFuRFFsTFErSjJrekhDWAp5cy9JQmdHemllQm1JZXJMZTNjZkYyL0FocUttMWxwMFEvRHVsZHZiN1pLMncwWlJxRFNlTlZkN2J1QUNiRTl4CmdRVmk0eitrTk9qdUVudE9LdXk3ZEhQMlFBUDI0OHRBdVVFOUx2VGtTN3hZS2pwWmxVckdTQ1NSMDlWcTFHaUYKRDBPUGVLcytNcG40QlFrcjFQRnhSSU03TloyWkF1MWZOZmZuQjdiRGVvckttVGVGMHEwamRlNXhIRDlTNEVJcgo2dVNkUDhpQjdJTHdVRG4vOVhCbGRBS2pRMnVMYTQ5anVQQWtSN0VUVkdERm1BcFp1TVBUWEYrRUJvc09hRDJqCjhxc2dXWDRVaDVNQll0VHVUa080QUUrd3B5c0lCTGZWTmNMd0l5b0dlQUFqd3RlNkI4N2lkd0plNzNCRDFQdzcKeGF2L3NHWDhwaUxGLzNlTHgwYW9TZGp0c203dkNWQ0Iva1Y1clI2dkVyNkRDL2J0MERjajhIWUl2VmZtckJmRQpFcmpxWDl2SjBlcVUxTlQrK2RicXllSnROQ2doS2YyRDZld0NxbVpZZmY5dXBWTjlNc1BUeWtGS1paK2l1WndkCmJUa1dRR1l6L01pUVZjYkRRbkJSZVg5OXBNMGZ0ejltRnY3MmhHdHp2eXlYMkNqREhjRTBHcHEwSU9CMmo5UUwKdlJDeHhrRXU3V2EwbnpMNXBLN3hOVGh4ek9LQkc3KzdZeGVUblhGb2FLTnpneG1GMHRBamliZnZ0MU1TbXJFYwpockMyRTBtU1JvTlU0R0NYWm4vTytHYzFYQi9kZTNSSk9SWW41OFFxcHMwaWxDUlFteEpHN21xcHdnaTY0TC9GCklyNjUwM1lYNk9GUVk4T0grOXdQdUljQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=}
  algorithm: ${JWT_ALGORITHM:RS512}
  access_expiration_seconds: ${JWT_ACCESS_EXPIRATION_SECONDS:1800}
  refresh_expiration_seconds: ${JWT_REFRESH_EXPIRATION_SECONDS:-1}

aws:
  region: ${AWS_REGION:us-west-2}
  s3:
    bucket_name: ${AWS_S3_BUCKET_NAME:local}
    presigned_url_expiration_seconds: ${AWS_S3_PRESIGNED_URL_EXPIRATION_SECONDS:3600}
  sqs:
    jobs:
      local:
        replicas: ${AWS_SQS_WORKER_LOCAL_REPLICAS:2}
        queue_url: ${AWS_SQS_WORKER_LOCAL_QUEUE_URL:http://sqs.us-west-2.localhost.localstack.cloud:4566/000000000000/local}
        wait_time_seconds: 20
        max_number_of_messages: 10
        visibility_timeout: 30
        delay_seconds: 0

oauth2:
  google:
    client_id: ${OAUTH2_GOOGLE_CLIENT_ID:__REPLACE_ME__}
    client_secret: ${OAUTH2_GOOGLE_CLIENT_SECRET:__REPLACE_ME__}
    token_url: https://oauth2.googleapis.com/token
    auth_url: https://accounts.google.com/o/oauth2/auth
    redirect_url: ${OAUTH2_GOOGLE_REDIRECT_URL:http://localhost:5173/oauth2/google/callback}
    user_info_url: https://www.googleapis.com/oauth2/v3/userinfo
    scopes:
      - openid
      - email
      - profile
